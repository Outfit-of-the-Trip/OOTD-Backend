# -*- coding: utf-8 -*-
"""2023관광데이터활용공모전_추천룰베_10/2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-RxKehry5xPYzjduYZ0ohpSDztjudozJ

pip3 install mysql-connector-python 
pip3 install beautifulsoup4
"""

def recomm_func(date_lst, season, gender, reason, category):

  outer = ["windbreak jacket","blazer","denim jacket","leather jacket","cardigan","coat","puffer"]
  top = ["tank top","tee shirt", "long sleeve shirt","shirt", "polo shirt", "sweat shirt", "hoodie sweat shirt", "knit sweater", "dress"]
  bottom =["jeans","slacks","short pants","sweat pants","skirt"]
  shoes = ["sandals","sneakers", "dress shoes"]

  import mysql.connector
  db_config = {
      'host': '34.64.159.185',
      'user': 'manager',
      'password': 'oott',
      'database': 'oott'
  }
  conn = mysql.connector.connect(**db_config)
  cursor = conn.cursor()

  if season=='봄': season=0
  if season=='여름': season=1
  if season=='가을': season=2
  if season=='겨울': season=3
  if gender=='MALE': gender=0
  if gender=='FEMALE': gender=1
  if reason=='배낭여행' or reason=='레저여행' or reason=='캠핑' or reason=='엠티': reason=0
  if reason=='호캉스' or reason=='핫플레이스' or reason=='탐방' or reason=='인생샷여행':reason=1
  if reason=='출장' or reason=='워크숍' or reason=='학회':reason=2
  for date in date_lst:
    trend_outer_before=[]
    trend_top=[]
    trend_outer_col=[]
    trend_top_col=[]

    qtrend_outer=f"SELECT crawlClothes FROM CRAWL_DATA where crawlClothesCategory='outer' and crawlCategory='{category}' GROUP BY crawlCategory,crawlClothesCategory,crawlClothes ORDER BY SUM(crawlCount) DESC LIMIT 2;"
    qtrend_top=f"SELECT crawlClothes FROM CRAWL_DATA where crawlClothesCategory='top' and crawlCategory='{category}' GROUP BY crawlCategory,crawlClothesCategory,crawlClothes ORDER BY SUM(crawlCount) DESC LIMIT 2;"
    qtrend_outer_col=f"SELECT crawlColor FROM CRAWL_DATA where crawlClothesCategory='outer' and crawlCategory='{category}' GROUP BY crawlCategory,crawlClothesCategory,crawlColor ORDER BY SUM(crawlCount) DESC LIMIT 3;"
    qtrend_top_col=f"SELECT crawlColor FROM CRAWL_DATA where crawlClothesCategory='top' and crawlCategory='{category}' GROUP BY crawlCategory,crawlClothesCategory,crawlColor ORDER BY SUM(crawlCount) DESC LIMIT 3;"
    if conn.is_connected():
      cursor.execute(qtrend_outer)
      trend_outer = cursor.fetchall()
      cursor.execute(qtrend_outer_col)
      trend_outer_col = cursor.fetchall()
      cursor.execute(qtrend_top)
      trend_top = cursor.fetchall()
      cursor.execute(qtrend_top_col)
      trend_top_col = cursor.fetchall()

    rem=["(",")",",","'"]
    for r in rem:
      for i in range(2):
        trend_outer[i] = str(trend_outer[i]).replace(r,"")
    for r in rem:
      for i in range(3):
        trend_outer_col[i] = str(trend_outer_col[i]).replace(r,"")
    for r in rem:
      for i in range(2):
        trend_top[i] = str(trend_top[i]).replace(r,"")
    for r in rem:
      for i in range(3):
        trend_top_col[i] = str(trend_top_col[i]).replace(r,"")

    user_input_filter=[season,gender] #계절,성별,who(x, 시밀러룩,커플룩(0,1,2)), 상대방 outter,top("beige_coat, white_long_tee")
    user_input_score=[reason,category,trend_outer,trend_top]

    outer_today = outer
    top_today = top
    bottom_today = bottom
    shoes_today = shoes
    outer_todayscore = [0]*7
    top_todayscore = [0]*9
    bottom_todayscore = [0]*5
    shoes_todayscore = [0]*3

    #socre
    if user_input_score[0]==0: #편안한 관광:10
      outer_todayscore[0]+=10 #바람막이
      outer_todayscore[4]+=5#가디건
      outer_todayscore[6]+=10#패딩
      top_todayscore[0]+=10#민소매0
      top_todayscore[1]+=10#반팔티1
      top_todayscore[2]+=10#긴팔티2
      top_todayscore[5]+=10#맨투맨5
      top_todayscore[6]+=10#후드6
      bottom_todayscore[0]+=5#청바지0
      bottom_todayscore[2]+=10#반바지2
      bottom_todayscore[3]+=10#트레이닝바지3
      shoes_todayscore[0]+=5#샌달0
      shoes_todayscore[1]+=10#운동화1
    if user_input_score[0]==1: #인생샷 남기고 싶은 관광
      outer_todayscore[1]+=10 #블레이져1
      outer_todayscore[2]+=10 #청자켓2
      outer_todayscore[3]+=10 #가죽자켓3
      outer_todayscore[4]+=5 #가디건4
      outer_todayscore[5]+=10 #코트5
      top_todayscore[3]+=5 #셔츠3
      top_todayscore[7]+=10 #니트7
      top_todayscore[8]+=15 #원피스8
      bottom_todayscore[0]+=10 #청바지0
      bottom_todayscore[1]+=5 #슬랙스1
      bottom_todayscore[2]+=5 #반바지2
      bottom_todayscore[4]+=12 #치마4
    if user_input_score[0]==2: #일
      outer_todayscore[1]+=10 #블레이저1
      outer_todayscore[4]+=5 #가디건4
      outer_todayscore[5]+=10 #코트5
      top_todayscore[1]+=5 #반팔티1
      top_todayscore[2]+=5 #긴팔티2
      top_todayscore[3]+=10 #셔츠3
      top_todayscore[4]+=10 #카라티4
      top_todayscore[7]+=5 #니트7
      bottom_todayscore[0]+=5 #청바지
      bottom_todayscore[0]+=10#슬랙스1
      bottom_todayscore[0]-=10#반바지2
      bottom_todayscore[0]-=10#트레이닝바지3
      shoes_todayscore[0]+=10 #운동화1
      shoes_todayscore[2]+=10 #구두2


    #필터링 -> 뒤에서 그냥 -100점처리하는 게 나을듯
    if user_input_filter[0]==0: #봄
      outer_todayscore[6]-=1000
      top_todayscore[1]-=1000
      top_todayscore[0]-=1000
      bottom_todayscore[2]-=1000
      shoes_todayscore[0]-=1000
    if user_input_filter[0]==1: #여름
      top_todayscore[2]-=1000
      top_todayscore[3]-=10
      top_todayscore[4]-=1000
      top_todayscore[5]-=1000
      top_todayscore[6]-=1000
      top_todayscore[7]-=1000
    if user_input_filter[0]==2: #가을
      outer_todayscore[6]-=1000
      top_todayscore[1]-=1000
      top_todayscore[0]-=1000
      bottom_todayscore[2]-=1000
      shoes_todayscore[0]-=1000
    if user_input_filter[0]==3: #겨울
      outer_todayscore[0]-=1000 #바람막이0 ~ 4
      outer_todayscore[1]-=1000
      outer_todayscore[2]-=1000
      outer_todayscore[3]-=1000
      outer_todayscore[4]-=1000
      top_todayscore[0]-=1000
      top_todayscore[1]-=1000
      bottom_todayscore[2]-=1000
      shoes_todayscore[0]-=1000

    if user_input_filter[1]==0: #남자
      top_todayscore[8]-=3000
      top_todayscore[0]-=10
      bottom_todayscore[4]-=3000
      shoes_todayscore[1]+=5


    fin_outer=[]
    fin_top=[]
    fin_bottom = []
    fin_shoes=[]
    outer_sorted = sorted(set(outer_todayscore), reverse=True)
    outer_sorted = outer_sorted[:3]
    
    for i  in range(3):
      for j in range(7):
        if outer_sorted[i] == outer_todayscore[j]:
          fin_outer.append(outer_today[j])
    fin_outer = fin_outer[:3]

    top_finscore=top_todayscore
    bottom_finscore=bottom_todayscore
    shoes_finscore=shoes_todayscore
    #마지막socre상하의매치 : 우선순위 : (outer ->) top -> bottom , shoes: 운동화 default
    if user_input_filter[0]!=1: #outer있으면
      shoes_todayscore[0]-=100
      shoes_todayscore[1]+=10
      for i in range(3):
        if fin_outer[i] == "windbreak jacket":
          top_finscore[1]+=10
          top_finscore[2]+=10
          bottom_finscore[4]-=10
        if fin_outer[i] == "blazer":
          top_finscore[1]+=10
          top_finscore[2]+=10
          top_finscore[3]+=10
          bottom_finscore[2]-=30
          bottom_finscore[3]-=30
        if fin_outer[i] == "denim jacket":
          top_finscore[1]+=10
          top_finscore[2]+=10
          top_finscore[5]+=10
          top_finscore[6]+=10
          top_finscore[8]+=10
        if fin_outer[i] == "leather jacket":
          top_finscore[1]+=10
          top_finscore[2]+=10
          top_finscore[4]+=10
          top_finscore[5]+=10
          top_finscore[6]+=10
          bottom_finscore[2]-=30
          bottom_finscore[3]-=30
        if fin_outer[i] == "coat":
          top_finscore[3]+=10
          top_finscore[4]+=10
          top_finscore[5]+=10
          top_finscore[6]+=15
          top_finscore[7]+=15
        if fin_outer[i] == "puffer":
          top_finscore[5]+=15
          top_finscore[6]+=10
          top_finscore[7]+=10
        fin_top.append(top_today[top_finscore.index(max(top_finscore))])
        top_finscore=top_todayscore
        bottom_finscore=bottom_todayscore
        shoes_finscore=shoes_todayscore


    else:
      fin_outer=[]
      top_sorted = sorted(set(top_todayscore), reverse=True)
      top_sorted = top_sorted[:3]
      for i  in range(3):
        for j in range(9):
          if top_sorted[i] == top_todayscore[j]:
            fin_top.append(top_today[j])
      fin_top = fin_top[:3]




    for i in range(3):
      top_finscore=top_todayscore
      bottom_finscore=bottom_todayscore
      shoes_finscore=shoes_todayscore
      if fin_top[i] == "셔츠":
        bottom_finscore[3]-=100
        shoes_finscore[0]-=100
      if fin_top[i] == "니트":
        bottom_finscore[3]-=100
      if fin_top[i] == "원피스":
        fin_bottom.append("")
        fin_shoes.append(shoes_today[shoes_finscore.index(max(shoes_finscore))])
        continue


      fin_bottom.append(bottom_today[bottom_finscore.index(max(bottom_finscore))])
      fin_shoes.append(shoes_today[shoes_finscore.index(max(shoes_finscore))])


    outer_col = trend_outer_col
    top_col=trend_top_col
    #color_bottom
    bottom_col=[]
    for i in range(3):
      if fin_bottom[i] == 'jeans':
        bottom_col.append('blue')
      if fin_bottom[i] == 'slacks':
        if outer_col[i] =='blue':
          bottom_col.append('gray')
        else:
          bottom_col.append('black')
      if fin_bottom[i] == 'sweat pants':
        if top_col[i] =='black':
          bottom_col.append('blue')
        if top_col[i]=='white' and outer_col[i]=='white':
          bottom_col.append('white')
        else:
          bottom_col.append('gray')
      if fin_bottom[i] == 'short pants':
        if top_col[i]=='white' and outer_col[i]=='white':
          bottom_col.append('white')
        else:
          bottom_col.append('blue')
      if fin_bottom[i] == 'skirt':
        if top_col[i]=='white' and outer_col[i]=='white':
          bottom_col.append('white')
        else:
          bottom_col.append('black')

    #color_shoes
    shoes_col=[]
    for i in range(3):
      if fin_shoes[i]=='sandals':
        shoes_col.append('black')
      if fin_shoes[i] =='dress shoes':
        shoes_col.append('black')
      if fin_shoes[i] =='sneakers':
        if fin_bottom[i]=='slacks':
          shoes_col.append('black')
        else:
          shoes_col.append('white')

    outer_adver_img=[]
    outer_adver_url=[]

    for i in range(3):
      search_query = f"{outer_col[i]} {fin_outer[i]}"
      search_url = f"https://www.musinsa.com/search/musinsa/integration?q={search_query}"
        # 웹 페이지 요청
      import requests
      from bs4 import BeautifulSoup

      response = requests.get(search_url)
      if response.status_code == 200:
          soup = BeautifulSoup(response.text, 'html.parser')
          # 이미지 가져오기
          images = soup.find_all('img', class_='lazyload lazy')
          for i, image in enumerate(images[:3]):  # 첫 번째부터 세 번째 이미지 가져오기
              image_url = image['data-original']
              b=image_url[51:].find('/')
              url_n=image_url[45:51+b]
              url = f"https://www.musinsa.com/app/goods/{url_n}"
              outer_adver_img.append(f"https:{image_url}")
              outer_adver_url.append(f"{url}")
      else:
          print("musinsa.com에 접속할 수 없습니다.")

    top_adver_img=[]
    top_adver_url=[]

    for i in range(3):
      search_query = f"{top_col[i]} {fin_top[i]}"
      search_url = f"https://www.musinsa.com/search/musinsa/integration?q={search_query}"

      response = requests.get(search_url)
      if response.status_code == 200:
          soup = BeautifulSoup(response.text, 'html.parser')
          # 이미지 가져오기
          images = soup.find_all('img', class_='lazyload lazy')
          for i, image in enumerate(images[:3]):  # 첫 번째부터 세 번째 이미지 가져오기
              image_url = image['data-original']
              b=image_url[51:].find('/')
              url_n=image_url[45:51+b]
              url = f"https://www.musinsa.com/app/goods/{url_n}"
              top_adver_img.append(f"https:{image_url}")
              top_adver_url.append(f"{url}")
      else:
          print("musinsa.com에 접속할 수 없습니다.")
    bottom_adver_img=[]
    bottom_adver_url=[]

    for i in range(3):
      search_query = f"{bottom_col[i]} {fin_bottom[i]}"
      search_url = f"https://www.musinsa.com/search/musinsa/integration?q={search_query}"

        # 웹 페이지 요청
      response = requests.get(search_url)
      if response.status_code == 200:
          soup = BeautifulSoup(response.text, 'html.parser')
          # 이미지 가져오기
          images = soup.find_all('img', class_='lazyload lazy')
          for i, image in enumerate(images[:3]):  # 첫 번째부터 세 번째 이미지 가져오기
              image_url = image['data-original']
              b=image_url[51:].find('/')
              url_n=image_url[45:51+b]
              url = f"https://www.musinsa.com/app/goods/{url_n}"
              bottom_adver_img.append(f"https:{image_url}")
              bottom_adver_url.append(f"{url}")
      else:
          print("musinsa.com에 접속할 수 없습니다.")
    shoes_adver_img=[]
    shoes_adver_url=[]

    for i in range(3):
      search_query = f"{shoes_col[i]} {gender} {fin_shoes[i]}"
      search_url = f"https://www.musinsa.com/search/musinsa/integration?q={search_query}"

        # 웹 페이지 요청
      response = requests.get(search_url)
      if response.status_code == 200:
          soup = BeautifulSoup(response.text, 'html.parser')
          # 이미지 가져오기
          images = soup.find_all('img', class_='lazyload lazy')
          for i, image in enumerate(images[:3]):  # 첫 번째부터 세 번째 이미지 가져오기
              image_url = image['data-original']
              b=image_url[51:].find('/')
              url_n=image_url[45:51+b]
              url = f"https://www.musinsa.com/app/goods/{url_n}"
              shoes_adver_img.append(f"https:{image_url}")
              shoes_adver_url.append(f"{url}")
      else:
          print("musinsa.com에 접속할 수 없습니다.")

    exampleImg_outer=[]
    exampleImg_top=[]
    exampleImg_bottom=[]
    exampleImg_shoes=[]

    for i in range(3):
      exampleClothes=fin_outer[i]
      exampleColor=outer_col[i]
      query=f"select exampleImage from EXAMPLE where exampleClothes='{exampleClothes}' and exampleColor='{exampleColor}' LIMIT 3;"
      cursor.execute(query)
      exampleimg = cursor.fetchall()
      exampleImg_outer.append(exampleimg)

      exampleClothes=fin_top[i]
      exampleColor=top_col[i]
      query=f"select exampleImage from EXAMPLE where exampleClothes='{exampleClothes}' and exampleColor='{exampleColor}' LIMIT 3;"
      cursor.execute(query)
      exampleimg = cursor.fetchall()
      exampleImg_top.append(exampleimg)

      exampleClothes=fin_bottom[i]
      exampleColor=bottom_col[i]
      query=f"select exampleImage from EXAMPLE where exampleClothes='{exampleClothes}' and exampleColor='{exampleColor}' LIMIT 3;"
      cursor.execute(query)
      exampleimg = cursor.fetchall()
      exampleImg_bottom.append(exampleimg)

      exampleClothes=fin_shoes[i]
      exampleColor=shoes_col[i]
      query=f"select exampleImage from EXAMPLE where exampleClothes='{exampleClothes}' and exampleColor='{exampleColor}' LIMIT 3;"
      cursor.execute(query)
      exampleimg = cursor.fetchall()
      exampleImg_shoes.append(exampleimg)

    #closet

    outer_closet=[]
    top_closet=[]
    bottom_closet=[]
    shoes_closet=[]
    test="'https://postfiles.pstatic.net/MjAyMzEwMDFfNjIg/MDAxNjk2MTYzMzcxMjc2.oVup_aS64ZNVcQnNnkmev1v1hFJSFyXTAv243hyRa1kg.QM5VNyfuGV_gZCTzZUp8SrP2XzMbjnruGZjW9zkU3Eog.PNG.pineapple7358/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7_2023-10-01_%EC%98%A4%ED%9B%84_9.29.27.png?type=w966'"

    for i in range(3):
      outercloset=fin_outer[i]
      outercolcloset=outer_col[i]
      query=f"select clothesImg from CLOSET where clothesTag='{outercloset}' and clothesColor='{outercolcloset}' limit 3;"
      cursor.execute(query)
      exampleimg = cursor.fetchall()

      if len(exampleimg)==0:
        outer_closet.append(test)
        outer_closet.append(test)
        outer_closet.append(test)
      elif len(exampleimg)==1:
        outer_closet.append(str(exampleimg[0])[1:-1])
        outer_closet.append(test)
        outer_closet.append(test)
      elif len(exampleimg)==2:
        outer_closet.append(exampleimg[0][1:-1])
        outer_closet.append(exampleimg[1][1:-1])
        outer_closet.append(test)
      elif len(exampleimg)==3:
        outer_closet.append(exampleimg[0][1:-1])
        outer_closet.append(exampleimg[1][1:-1])
        outer_closet.append(exampleimg[2][1:-1])

    for i in range(3):
      topcloset=fin_top[i]
      topcolcloset=top_col[i]
      query=f"select clothesImg from CLOSET where clothesTag='{topcloset}' and clothesColor='{topcolcloset}' limit 3;"
      cursor.execute(query)
      exampleimg = cursor.fetchall()

      if len(exampleimg)==0:
        top_closet.append(test)
        top_closet.append(test)
        top_closet.append(test)
      elif len(exampleimg)==1:
        top_closet.append(str(exampleimg[0])[1:-1])
        top_closet.append(test)
        top_closet.append(test)
      elif len(exampleimg)==2:
        top_closet.append(str(exampleimg[0])[1:-1])
        top_closet.append(str(exampleimg[1])[1:-1])
        top_closet.append(test)
      elif len(exampleimg)==3:
        top_closet.append(str(exampleimg[0])[1:-1])
        top_closet.append(str(exampleimg[1])[1:-1])
        top_closet.append(str(exampleimg[2])[1:-1])


      for i in range(3):
        bottomcloset=fin_bottom[i]
        bottomcolcloset=bottom_col[i]
        query=f"select clothesImg from CLOSET where clothesTag='{bottomcloset}' and clothesColor='{bottomcolcloset}' limit 3;"
        cursor.execute(query)
        exampleimg = cursor.fetchall()

        if len(exampleimg)==0:
          bottom_closet.append(test)
          bottom_closet.append(test)
          bottom_closet.append(test)
        elif len(exampleimg)==1:
          bottom_closet.append(str(exampleimg[0])[1:-1])
          bottom_closet.append(test)
          bottom_closet.append(test)
        elif len(exampleimg)==2:
          bottom_closet.append(str(exampleimg[0])[1:-1])
          bottom_closet.append(str(exampleimg[1])[1:-1])
          bottom_closet.append(test)
        elif len(exampleimg)==3:
          bottom_closet.append(str(exampleimg[0])[1:-1])
          bottom_closet.append(str(exampleimg[1])[1:-1])
          bottom_closet.append(str(exampleimg[2])[1:-1])

      for i in range(3):
        shoescloset=fin_shoes[i]
        shoescolcloset=shoes_col[i]
        query=f"select clothesImg from CLOSET where clothesTag='{shoescloset}' and clothesColor='{shoescolcloset}' limit 3;"
        cursor.execute(query)
        exampleimg = cursor.fetchall()
        if len(exampleimg)==0:
          shoes_closet.append(test)
          shoes_closet.append(test)
          shoes_closet.append(test)
        elif len(exampleimg)==1:
          shoes_closet.append(str(exampleimg[0])[1:-2])
          shoes_closet.append(test)
          shoes_closet.append(test)
        elif len(exampleimg)==2:
          shoes_closet.append(str(exampleimg[0])[1:-2])
          shoes_closet.append(str(exampleimg[1])[1:-2])
          shoes_closet.append(test)
        elif len(exampleimg)==3:
          shoes_closet.append(str(exampleimg[0])[1:-2])
          shoes_closet.append(str(exampleimg[1])[1:-2])
          shoes_closet.append(str(exampleimg[2])[1:-2])

    fin_return=f"""
      +
          date: {date},
          clothes: [
              +
                  outter: +
                      img: {str(exampleImg_outer[0])[2:-3]},
                      detail:+
                          commercial:[
                              +
                                  img: '{outer_adver_img[0]}',
                                  link: '{outer_adver_url[0]}'
                              -,
                              +
                                  img: '{outer_adver_img[1]}',
                                  link: '{outer_adver_url[1]}'
                              -,
                              +
                                  img: '{outer_adver_img[2]}',
                                  link: '{outer_adver_url[2]}'
                              -,
                          ],
                          closet:[
                              +
                                  img: '{outer_closet[0]}',
                              -,
                              +
                                  img: '{outer_closet[1]}',
                              -,
                              +
                                  img: '{outer_closet[2]}',
                              -,
                          ],
                      -

                  -,
                  top: +
                      img: {str(exampleImg_top[0])[2:-3]},
                      detail:+
                          commercial:[
                              +
                                  img: '{top_adver_img[0]}',
                                  link: '{top_adver_url[0]}'
                              -,
                              +
                                  img: '{top_adver_img[1]}',
                                  link: '{top_adver_url[1]}'
                              -,
                              +
                                  img: '{top_adver_img[2]}',
                                  link: '{top_adver_url[2]}'
                              -,
                          ],
                          closet:[
                              +
                                  img: {top_closet[0]},
                              -,
                              +
                                  img: {top_closet[1]},
                              -,
                              +
                                  img: {top_closet[2]},
                              -,
                          ],
                      -
                  -,
                  bottom: +
                      img: {str(exampleImg_bottom[0])[2:-3]},
                      detail:+
                          commercial:[
                              +
                                  img: '{bottom_adver_img[0]}',
                                  link: '{bottom_adver_url[0]}'
                              -,
                              +
                                  img: '{bottom_adver_img[1]}',
                                  link: '{bottom_adver_url[1]}'
                              -,
                              +
                                  img: '{bottom_adver_img[2]}',
                                  link: '{bottom_adver_url[2]}'
                              -,
                          ],
                          closet:[
                              +
                                  img: {bottom_closet[0]},
                              -,
                              +
                                  img: {bottom_closet[1]},
                              -,
                              +
                                  img: {bottom_closet[2]},
                              -,
                          ],
                      -
                  -,
                  shoes: +
                      img: {str(exampleImg_shoes[0])[2:-3]},
                      detail:+
                          commercial:[
                              +
                                  img: '{shoes_adver_img[0]}',
                                  link: '{shoes_adver_url[0]}'
                              -,
                              +
                                  img: '{shoes_adver_img[1]}',
                                  link: '{shoes_adver_url[1]}'
                              -,
                              +
                                  img: '{shoes_adver_img[2]}',
                                  link: '{shoes_adver_url[2]}'
                              -,
                          ],
                          closet:[
                              +
                                  img: {shoes_closet[0]},
                              -,
                              +
                                  img: {shoes_closet[1]},
                              -,
                              +
                                  img: {shoes_closet[2]},
                              -,
                          ],
                      -
                  -,
              -,
                +
                  outter: +
                      img: {str(exampleImg_outer[1])[2:-3]},
                      detail:+
                          commercial:[
                              +
                                  img: '{outer_adver_img[3]}',
                                  link: '{outer_adver_url[3]}'
                              -,
                              +
                                  img: '{outer_adver_img[4]}',
                                  link: '{outer_adver_url[4]}'
                              -,
                              +
                                  img: '{outer_adver_img[5]}',
                                  link: '{outer_adver_url[5]}'
                              -,
                          ],
                          closet:[
                              +
                                  img: {outer_closet[3]},
                              -,
                              +
                                  img: {outer_closet[4]},
                              -,
                              +
                                  img: {outer_closet[5]},
                              -,
                          ],
                      -

                  -,
                  top: +
                      img: {str(exampleImg_top[1])[2:-3]},
                      detail:+
                          commercial:[
                              +
                                  img: '{top_adver_img[3]}',
                                  link: '{top_adver_url[4]}'
                              -,
                              +
                                  img: '{top_adver_img[4]}',
                                  link: '{top_adver_url[4]}'
                              -,
                              +
                                  img: '{top_adver_img[5]}',
                                  link: '{top_adver_url[5]}'
                              -,
                          ],
                          closet:[
                              +
                                  img: {top_closet[3]},
                              -,
                              +
                                  img: {top_closet[4]},
                              -,
                              +
                                  img: {top_closet[5]},
                              -,
                          ],
                      -
                  -,
                  bottom: +
                      img: {str(exampleImg_bottom[1])[2:-3]},
                      detail:+
                          commercial:[
                              +
                                  img: '{bottom_adver_img[3]}',
                                  link: '{bottom_adver_url[3]}'
                              -,
                              +
                                  img: '{bottom_adver_img[4]}',
                                  link: '{bottom_adver_url[4]}'
                              -,
                              +
                                  img: '{bottom_adver_img[5]}',
                                  link: '{bottom_adver_url[5]}'
                              -,
                          ],
                          closet:[
                              +
                                  img: '{bottom_closet[3]}',
                              -,
                              +
                                  img: '{bottom_closet[4]}',
                              -,
                              +
                                  img: '{bottom_closet[5]}',
                              -,
                          ],
                      -
                  -,
                  shoes: +
                      img: {str(exampleImg_shoes[1])[2:-2]},
                      detail:+
                          commercial:[
                              +
                                  img: '{shoes_adver_img[3]}',
                                  link: '{shoes_adver_url[3]}'
                              -,
                              +
                                  img: '{shoes_adver_img[4]}',
                                  link: '{shoes_adver_url[4]}'
                              -,
                              +
                                  img: '{shoes_adver_img[5]}',
                                  link: '{shoes_adver_url[5]}'
                              -,
                          ],
                          closet:[
                              +
                                  img: '{shoes_closet[3]}',
                              -,
                              +
                                  img: '{shoes_closet[4]}',
                              -,
                              +
                                  img: '{shoes_closet[5]}',
                              -,
                          ],
                      -
                  -,
              -,
                +
                  outter: +
                      img: {str(exampleImg_outer[2])[2:-3]},
                      detail:+
                          commercial:[
                              +
                                  img: '{outer_adver_img[6]}',
                                  link: '{outer_adver_url[6]}'
                              -,
                              +
                                  img: '{outer_adver_img[7]}',
                                  link: '{outer_adver_url[7]}'
                              -,
                              +
                                  img: '{outer_adver_img[8]}',
                                  link: '{outer_adver_url[8]}'
                              -,
                          ],
                          closet:[
                              +
                                  img: {outer_closet[6]},
                              -,
                              +
                                  img: {outer_closet[7]},
                              -,
                              +
                                  img: {outer_closet[8]},
                              -,
                          ],
                      -

                  -,
                  top: +
                      img: {str(exampleImg_top[2])[2:-3]},
                      detail:+
                          commercial:[
                              +
                                  img: '{top_adver_img[6]}',
                                  link: '{top_adver_url[6]}'
                              -,
                              +
                                  img: '{top_adver_img[7]}',
                                  link: '{top_adver_url[7]}'
                              -,
                              +
                                  img: '{top_adver_img[8]}',
                                  link: '{top_adver_url[8]}'
                              -,
                          ],
                          closet:[
                              +
                                  img: {top_closet[6]},
                              -,
                              +
                                  img: {top_closet[7]},
                              -,
                              +
                                  img: {top_closet[8]},
                              -,
                          ],
                      -
                  -,
                  bottom: +
                      img: {str(exampleImg_bottom[2])[2:-3]},
                      detail:+
                          commercial:[
                              +
                                  img: '{bottom_adver_img[6]}',
                                  link: '{bottom_adver_url[6]}'
                              -,
                              +
                                  img: '{bottom_adver_img[7]}',
                                  link: '{bottom_adver_url[7]}'
                              -,
                              +
                                  img: '{bottom_adver_img[8]}',
                                  link: '{bottom_adver_url[8]}'
                              -,
                          ],
                          closet:[
                              +
                                  img: {bottom_closet[6]},
                              -,
                              +
                                  img: {bottom_closet[7]},
                              -,
                              +
                                  img: {bottom_closet[8]},
                              -,
                          ],
                      -
                  -,
                  shoes: +
                      img: {str(exampleImg_shoes[2])[2:-3]},
                      detail:+
                          commercial:[
                              +
                                  img: '{shoes_adver_img[6]}',
                                  link: '{shoes_adver_url[6]}'
                              -,
                              +
                                  img: '{shoes_adver_img[7]}',
                                  link: '{shoes_adver_url[7]}'
                              -,
                              +
                                  img: '{shoes_adver_img[8]}',
                                  link: '{shoes_adver_url[8]}'
                              -,
                          ],
                          closet:[
                              +
                                  img: {shoes_closet[6]},
                              -,
                              +
                                  img: {shoes_closet[7]},
                              -,
                              +
                                  img: {shoes_closet[8]},
                              -,
                          ],
                      -
                  -,
              -,
          ]
    -

    """
    fin_return = "["+fin_return+"]"
    fin_return = fin_return.replace("+","{")
    fin_return = fin_return.replace("-","}")


  #return [fin_outer,fin_top, fin_bottom, fin_shoes,outer_col,top_col,bottom_col,shoes_col,outer_adver_img,outer_adver_url,top_adver_img, top_adver_url,bottom_adver_img,bottom_adver_url,shoes_adver_img,shoes_adver_url,exampleImg_outer,exampleImg_top, exampleImg_bottom, exampleImg_shoes,closet_outer,closet_top,closet_bottom,closet_shoes]
  print(fin_return)

import sys


if __name__ == '__main__':
    recomm_func(sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4], sys.argv[5])
